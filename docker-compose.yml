version: '3.9'

services:
  sql:
    container_name: db
    image: postgres:16.2-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - "${MOUNT_SQL}:/var/lib/postgresql/data"
    healthcheck: 
      interval: 1s
      retries: 100
      test: "pg_isready -U \"$$POSTGRES_USER\" -d \"$$POSTGRES_DB\""
      timeout: 2s
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - app-network

  crawler:
    container_name: crawler
    image: inejka/telegraphcrawler:latest
    networks:
      - app-network
    depends_on:
      sql:
        condition: service_healthy
    environment:
      - DATABASE_HOST=sql
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - "${MOUNT_WORK}:/work"

networks:
  app-network:
    driver: bridge